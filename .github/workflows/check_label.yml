name: Check Labels

on:
  issues:
    types: [opened, labeled, unlabeled]
  pull_request:
    types: [opened, labeled, unlabeled]

jobs:
  check-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check labels
        uses: actions/github-script@v6
        with:
          script: |
            const {
              data: { labels },
            } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            let hasArea = false;
            let hasDifficulty = false;
            let hasPriority = false;
            let hasStatus = false;
            let hasType = false;

            for (const label of labels) {
              if (label.name.startsWith('A')) {
                  hasArea = true;
              } else if (label.name.startsWith('D')) {
                  hasDifficulty = true;
              } else if (label.name.startsWith('P')) {
                  hasPriority = true;
              } else if (label.name.startsWith('S')) {
                  hasStatus = true;
              } else if (label.name.startsWith('T')) {
                  hasType = true;
              }
            }

            let comment =
              'Hey there! It looks like this issue is missing some important labels: ';
            if (!hasArea) {
              comment += 'Area, ';
            }
            if (!hasDifficulty) {
              comment += 'Difficulty, ';
            }
            if (!hasPriority) {
              comment += 'Priority, ';
            }
            if (!hasStatus) {
              comment += 'Status, ';
            }
            if (!hasType) {
              comment += 'Type, ';
            }

            if (!comment.endsWith('. ')) {
                comment = comment.slice(0, -2);
                comment += ". ";
            }

            comment += "Please add these labels to the issue so we can better track it. Thanks!";

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment,
            });